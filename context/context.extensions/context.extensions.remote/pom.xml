<?xml version="1.0" encoding="UTF-8"?>
<!--
  #%L
  Wisdom-Framework
  %%
  Copyright (C) 2013 - 2014 Wisdom Framework
  %%
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at
  
       http://www.apache.org/licenses/LICENSE-2.0
  
  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
  #L%
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>fr.liglab.adele.icasa</groupId>
    <artifactId>icasa.context.extensions.remote</artifactId>
    <version>1.2.7-SNAPSHOT</version>

    <packaging>wisdom</packaging>

    <dependencies>
        <dependency>
            <groupId>org.wisdom-framework</groupId>
            <artifactId>wisdom-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.felix</groupId>
            <artifactId>org.apache.felix.ipojo.annotations</artifactId>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>bootstrap</artifactId>
            <version>3.1.1</version>
        </dependency>

        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>jquery</artifactId>
            <version>2.1.0-2</version>
        </dependency>

        <!-- Test dependencies -->
        <dependency>
            <groupId>org.wisdom-framework</groupId>
            <artifactId>wisdom-test</artifactId>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.fluentlenium</groupId>
            <artifactId>fluentlenium-assertj</artifactId>
        </dependency>
        <dependency>
            <!-- slf4j binding used for tests -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-jcl</artifactId>
            <version>1.7.9</version>
            <scope>test</scope>
        </dependency>

        <!-- Additional applications -->
        <dependency>
            <groupId>org.wisdom-framework</groupId>
            <artifactId>wisdom-monitor</artifactId>
            <version>0.8.0</version>
        </dependency>
        <dependency>
            <groupId>org.wisdom-framework</groupId>
            <artifactId>documentation</artifactId>
            <version>0.8.0</version>
        </dependency>

        <!-- Context -->
        <dependency>
            <groupId>fr.liglab.adele.icasa</groupId>
            <artifactId>icasa.context.model</artifactId>
            <version>${project.version}</version>
        </dependency>

        <dependency>
        	<groupId>fr.liglab.adele.icasa</groupId>
        	<artifactId>icasa.context.model.runtime</artifactId>
        	<version>${project.version}</version>
        </dependency>
        
        <dependency>
            <groupId>fr.liglab.adele.icasa</groupId>
            <artifactId>command.handler</artifactId>
            <version>${project.version}</version>
            <scope>provided</scope>
        </dependency>
        
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <!-- Define all the versions of the dependencies provided by Wisdom -->
                <groupId>org.wisdom-framework</groupId>
                <artifactId>wisdom-bom</artifactId>
                <version>0.8.0</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Export-Package>fr.liglab.adele.icasa.context.extensions.remote.api</Export-Package> <!-- YOUR_EXPORTED_PACKAGES -->
                        <Private-Package>fr.liglab.adele.icasa.context.extensions.remote.impl</Private-Package>
                    </instructions>
                </configuration>
            </plugin>

			<!-- This plugin configuration is used to indirectly set the wisdom-compiler-plugin:compile configuration
				 It has no influence on the maven build itself as the maven-compiler-plugin is not attached to the
				 lifecycle of a wisdom artifact
			-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.5.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			
            <plugin>
                <groupId>org.wisdom-framework</groupId>
                <artifactId>wisdom-maven-plugin</artifactId>
                <version>0.8.0</version>
                <extensions>true</extensions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.18</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <properties>
                                <property>
                                    <name>listener</name>
                                    <value>org.wisdom.test.WisdomRunListener</value>
                                </property>
                            </properties>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        
		<pluginManagement>
			<plugins>
				
				<!--This plugin's configuration is used to store Eclipse m2e settings only. 
					It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
							    <pluginExecution>
							      <pluginExecutionFilter>
							        <groupId>org.wisdom-framework</groupId>
							        <artifactId>wisdom-maven-plugin</artifactId>
							        <versionRange>0.8.0</versionRange>
							        <goals>
							          <goal>initialize</goal>
							        </goals>
							      </pluginExecutionFilter>
							      <action>
							        <execute>
							        	<runOnConfiguration>true</runOnConfiguration>
							        	<runOnIncremental>true</runOnIncremental>
							        </execute>
							      </action>
							    </pluginExecution>
							    <pluginExecution>
							      <pluginExecutionFilter>
							        <groupId>org.wisdom-framework</groupId>
							        <artifactId>wisdom-maven-plugin</artifactId>
							        <versionRange>0.8.0</versionRange>
							        <goals>
							          <goal>compile</goal>
							          <goal>testCompile</goal>
							        </goals>
							      </pluginExecutionFilter>
							      <action>
							        <configurator>
							          <id>org.eclipse.m2e.jdt.javaConfigurator</id>
							        </configurator>
							      </action>
							    </pluginExecution>
							    <pluginExecution>
							      <pluginExecutionFilter>
							        <groupId>org.wisdom-framework</groupId>
							        <artifactId>wisdom-maven-plugin</artifactId>
							        <versionRange>0.8.0</versionRange>
							        <goals>
							          <goal>copy-configuration</goal>
							          <goal>copy-resources</goal>
							          <goal>copy-assets</goal>
							          <goal>copy-templates</goal>
							          <goal>compile-javascript</goal>
							          <goal>compile-coffeescript</goal>
							          <goal>compile-less</goal>
							          <goal>minify-css</goal>
							          <goal>optimize-images</goal>
							        </goals>
							      </pluginExecutionFilter>
							      <action>
							        <execute>
							        	<runOnConfiguration>true</runOnConfiguration>
							        </execute>
							      </action>
							    </pluginExecution>
							    <pluginExecution>
							      <pluginExecutionFilter>
							        <groupId>org.wisdom-framework</groupId>
							        <artifactId>wisdom-maven-plugin</artifactId>
							        <versionRange>0.8.0</versionRange>
							        <goals>
							          <goal>test</goal>
							          <goal>test-javascript</goal>
							        </goals>
							      </pluginExecutionFilter>
							      <action>
							        <ignore />
							      </action>
							    </pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>

				<!--This plugin's configuration is used to store Eclipse m2e settings only. 
				
					TODO WORKAROUND We need to configure at least one compile goal to force the
					org.eclipse.m2e.jdt.javaConfigurator to configure the eclipse project using
					maven compiler plugin's parameters.
					
					This has the annoying side-effect to execute two testCompile goals (the one
					from wisdom and the one from maven).
					
					The long-term solution is to provide a project configurator specialized for
					wisdom artifacts
				-->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.5.1</version>
					<executions>
						<execution>
							<goals>
								<goal>testCompile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>				
			</plugins>
		</pluginManagement>
        
    </build>

    <repositories>
        <repository>
            <id>oss-snapshot</id>
            <name>oss-snapshot</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>oss-snapshot</id>
            <name>oss-snapshot</name>
            <url>https://oss.sonatype.org/content/repositories/snapshots/</url>
        </pluginRepository>
    </pluginRepositories>
</project>