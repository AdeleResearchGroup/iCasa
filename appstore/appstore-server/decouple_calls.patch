diff --git a/appstore/appstore-server/app/assets/javascripts/components/model/productModel.coffee b/appstore/appstore-server/app/assets/javascripts/components/model/productModel.coffee
index 214c383..41964aa 100644
--- a/appstore/appstore-server/app/assets/javascripts/components/model/productModel.coffee
+++ b/appstore/appstore-server/app/assets/javascripts/components/model/productModel.coffee
@@ -134,6 +134,11 @@ define(['backbone', 'underscore'],
 			constructor:()->
 				super;
 
+        class DataModel.Collection.TopProducts extends bb.Collection
+            url: 'catalog/top/products'
+            model: DataModel.Models.Product
+
+
 		class DataModel.Collections.Products extends bb.Collection
 
 			url: 'catalog/products'
diff --git a/appstore/appstore-server/app/controllers/ProductController.java b/appstore/appstore-server/app/controllers/ProductController.java
index 9cbf571..2780b4e 100644
--- a/appstore/appstore-server/app/controllers/ProductController.java
+++ b/appstore/appstore-server/app/controllers/ProductController.java
@@ -34,17 +34,7 @@ public class ProductController extends Controller {
 	private static final String PRODUCTS_PER_PAGE = "productsPerPage";
 
     @SecureSocial.SecuredAction
-    public static Result products(){
-        System.out.println("Getting products");
-        DynamicForm requestData = form().bindFromRequest();
-        System.out.println("get params: " + requestData.toString());
-        if (requestData.get(TOP_NUMBER) != null) {
-            System.out.println("Getting top products");
-            return topProducts(requestData.get(TOP_NUMBER));
-        } else if (requestData.get(PAGE) != null){
-            System.out.println("Getting products per page");
-			return productsPerPage(requestData.get(PAGE), requestData.get(PRODUCTS_PER_PAGE));
-		}
+    public static Result allProducts(){
 		List<Product> allProducts = null;
 		allProducts = Product.all();
 		ArrayNode products = Json.newObject().arrayNode();
@@ -63,7 +53,7 @@ public class ProductController extends Controller {
 
         return ok();
     }
-
+    @SecureSocial.SecuredAction
     public static Result topProducts(String topNumber){
 		List<Product> allProducts = null;
 		int top = 10;
@@ -93,7 +83,7 @@ public class ProductController extends Controller {
         }
         return ok(products);
     }
-
+    @SecureSocial.SecuredAction
     public static Result productsPerPage(String page, String productsPerPage){
 		List<Product> allProducts = null;
 		int _page;
